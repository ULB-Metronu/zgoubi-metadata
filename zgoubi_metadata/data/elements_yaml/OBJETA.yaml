zgoubi_name: OBJETA
params:
  BORO: {type: E, unit: "", default: 0, doc: "Reference rigidity"}
  IBODY: {type: I, unit: "", default: 0, doc: ""}
  KOBJ: {type: I, unit: "", default: 0, doc: "Occurence of “PRINT” will cause printout to zgoubi.MATRIX.out file."}
  IMAX: {type: I, unit: "", default: 0, doc: ""}
  M1: {type: E, unit="GeV_c2", default=0.0, doc: "Rest masses of the bodies"}
  M2: {type: E, unit="GeV_c2", default=0.0, doc: "Rest masses of the bodies"}
  M3: {type: E, unit="GeV_c2", default=0.0, doc: "Rest masses of the bodies"}
  M4: {type: E, unit="GeV_c2", default=0.0, doc: "Rest masses of the bodies"}
  M5: {type: E, unit="GeV_c2", default=0.0, doc: "Rest masses of the bodies"}
  M6: {type: E, unit="GeV_c2", default=0.0, doc: "Rest masses of the bodies"}
  T1: {type: E, unit="GeV", default=0.0, doc: "Kinetic energy of the incident body"}
  Y0: {type: E, unit="cm", default.0=0, doc:""}
  T0: {type: E, unit="mrad", default=0.0, doc:""}
  Z0: {type: E, unit="cm", default=0.0, doc:""}
  P0: {type: E, unit="mrad", default=0.0, doc:""}
  D0: {type: E, unit="", default=0.0, doc:""}
  DELTA_Y: {type: E, unit="cm", default=0.0, doc:""}
  DELTA_T: {type: E, unit="mrad", default=0.0, doc:""}
  DELTA_Z: {type: E, unit="cm", default=0.0, doc:""}
  DELTA_P: {type: E, unit="mrad", default=0.0, doc:""}
  DELTA_D: {type: E, unit="", default=0.0, doc:""}
  XL: {type: E, unit="cm", default=0.0, doc:"Half length of object"}
  IR1: {type: I, unit="", default=0, doc:"Random sequence seeds"}
  IR2: {type: I, unit="", default=0, doc:"Random sequence seeds"}
template:
- - BORO
- - IBODY
  - KOBJ
- - IMAX
- - M1
  - M2
  - M3
  - M4
  - M5
  - M6
- - T1
- - Y0
  - T0
  - Z0
  - P0
  - D0
- - DELTA_Y
  - DELTA_T
  - DELTA_Z
  - DELTA_P
  - DELTA_D
- - XL
- - IR1
  - IR2
  
doc: |

  Object from Monte-Carlo simulation of decay reaction

  .. rubric:: Zgoubi manual description

  This generator simulates the reactions[34]

  .. math::

    M_1 + M_2 \rightarrow M_3 + M_4

  and then

  .. math::

    M_4 \rightarrow M_5 + M_6

  where :math:`M1` is the mass of the incoming body ; :math:`M2` is the mass of the target ; :math:`M3` is an outgoing body ; :math:`M4` is
  the rest mass of the decaying body ; :math:`M5` and :math:`M6` are decay products. Example :

  .. math::
    \begin{align}
      p + d \rightarrow ^3 He + \eta \\
      \eta \rightarrow \mu^+ + \mu^-
    \end{align}

  The first input data are the reference rigidity

  .. math::

    BORO = p_0 / q

  an index ``IBODY`` which specifies the particle to be ray-traced, namely M3 (``IBODY`` = 1), M5 (``IBODY`` = 2)
  or M6 (``IBODY`` = 3). In this last case, initial conditions for M6 must be generated by a first run of ``OBJETA``
  with ``IBODY`` = 2 ; they are then stored in a buffer array, and restored as initial conditions at the next occurrence
  of ``OBJETA`` with ``IBODY`` = 3. Note that zgoubi by default assumes positively charged particles.

  Another index, ``KOBJ``, specifies the type of distribution for the initial transverse coordinates Y , Z ; namely
  either uniform (``KOBJ``= 1) or Gaussian (``KOBJ``= 2). The other three coordinates T, P and D are deduced
  from the kinematic of the reactions.

  The next data are the number of particles to be generated, ``IMAX``, the masses involved in the two previous
  reactions.

  .. math::

    M_1, M_2, M_3, M_4, M_5, M_6

  and the kinetic energy :math:`T1` of the incoming body (:math:`M1`).
  Then one gives the central value of the distribution for each coordinate

  .. math::

    Y_0, T_0, Z_0, P_0, D_0

  and the width of the distribution around the central value

  .. math::

    \delta Y, \delta T, \delta Z, \delta P, \delta D

  so that only those particles in the range

  .. math::

    \begin{algin}
      Y_0 - \delta T \leq Y \leq Y_0 + \delta Y \\
      \text{...} \\
      D_0 - \delta D \lea D \leq D_0 + \delta D \\
    \end{align}

  will be retained. The longitudinal initial coordinate is uniformly sorted in the range

  .. math::

    -XL \leq X_0 \leq XL

  The random sequences involved may be initialized with different values of the two integer seeds ``IR1`` and
  ``IR2`` (=1e6).
  Possible use of ``PARTICUL`` will have no effect : it will not change the mass and charge assumptions as set
  by ``OBJETA``
